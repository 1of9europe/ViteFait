#!/bin/bash

# Script de finalisation du d√©ploiement Conciergerie Urbaine
echo "üéâ Finalisation du d√©ploiement Conciergerie Urbaine..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "README.md" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis la racine du projet"
    exit 1
fi

print_status "V√©rification de l'√©tat du repository..."

# V√©rifier le statut Git
if [ -n "$(git status --porcelain)" ]; then
    print_status "Fichiers non commit√©s d√©tect√©s, ajout au staging..."
    git add .
    
    print_status "Cr√©ation du commit de finalisation..."
    git commit -m "üéâ docs: Finalisation du projet V0

- Ajout du guide de contribution (CONTRIBUTING.md)
- Ajout de la licence MIT (LICENSE)
- Ajout du changelog (CHANGELOG.md)
- Configuration ESLint et Prettier pour mobile
- Configuration Jest pour mobile
- Templates pour issues et Pull Requests
- Guide de d√©ploiement (DEPLOYMENT.md)
- Scripts de d√©ploiement automatis√©s

Le projet est maintenant pr√™t pour le d√©veloppement collaboratif !"
    
    print_success "Commit cr√©√© avec succ√®s"
else
    print_status "Aucun fichier √† commiter"
fi

# Push vers GitHub
print_status "Push vers GitHub..."
if git push origin develop; then
    print_success "Code pouss√© vers la branche develop"
else
    print_error "Erreur lors du push vers GitHub"
    exit 1
fi

# Cr√©er une branche de release
print_status "Cr√©ation de la branche de release v0.1.0..."
git checkout -b release/v0.1.0

if git push origin release/v0.1.0; then
    print_success "Branche de release cr√©√©e et pouss√©e"
else
    print_error "Erreur lors de la cr√©ation de la branche de release"
    exit 1
fi

# Retourner sur develop
git checkout develop

# Cr√©er un tag
print_status "Cr√©ation du tag v0.1.0..."
git tag -a v0.1.0 -m "Version 0.1.0 - Initial Release

- Structure compl√®te du projet
- Backend Node.js/Express avec TypeScript
- Mobile React Native avec TypeScript
- API REST compl√®te
- Authentification JWT
- Gestion des missions
- Syst√®me de paiement Stripe
- Tests unitaires et d'int√©gration
- CI/CD avec GitHub Actions
- Documentation compl√®te"

if git push origin v0.1.0; then
    print_success "Tag v0.1.0 cr√©√© et pouss√©"
else
    print_error "Erreur lors de la cr√©ation du tag"
    exit 1
fi

# Afficher le r√©sum√©
echo ""
echo "üéâ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS !"
echo "======================================"
echo ""
print_success "‚úÖ Repository GitHub configur√©"
print_success "‚úÖ Branche develop cr√©√©e"
print_success "‚úÖ Branche release/v0.1.0 cr√©√©e"
print_success "‚úÖ Tag v0.1.0 cr√©√©"
print_success "‚úÖ Documentation compl√®te ajout√©e"
print_success "‚úÖ Templates GitHub configur√©s"
echo ""
echo "üìã PROCHAINES √âTAPES RECOMMAND√âES :"
echo "======================================"
echo ""
echo "1. üåê Cr√©er une Pull Request de develop vers main"
echo "2. üè∑Ô∏è Cr√©er un release sur GitHub avec le tag v0.1.0"
echo "3. üîß Configurer les secrets GitHub pour CI/CD :"
echo "   - HEROKU_API_KEY (si d√©ploiement Heroku)"
echo "   - AWS_ACCESS_KEY_ID et AWS_SECRET_ACCESS_KEY (si d√©ploiement AWS)"
echo "   - STRIPE_SECRET_KEY"
echo "   - FIREBASE_PRIVATE_KEY"
echo "4. üóÑÔ∏è Configurer la base de donn√©es PostgreSQL"
echo "5. üí≥ Configurer Stripe pour les paiements"
echo "6. üîî Configurer Firebase pour les notifications"
echo "7. üì± Configurer les certificats iOS/Android"
echo ""
echo "üìö DOCUMENTATION DISPONIBLE :"
echo "=============================="
echo "‚Ä¢ README.md - Vue d'ensemble du projet"
echo "‚Ä¢ QUICK_START.md - Guide d'installation rapide"
echo "‚Ä¢ API_DOCUMENTATION.md - Documentation de l'API"
echo "‚Ä¢ CONTRIBUTING.md - Guide de contribution"
echo "‚Ä¢ DEPLOYMENT.md - Guide de d√©ploiement"
echo "‚Ä¢ CHANGELOG.md - Historique des versions"
echo ""
echo "üîó LIENS UTILES :"
echo "=================="
echo "‚Ä¢ Repository GitHub: https://github.com/1of9europe/ViteFait"
echo "‚Ä¢ Issues: https://github.com/1of9europe/ViteFait/issues"
echo "‚Ä¢ Pull Requests: https://github.com/1of9europe/ViteFait/pulls"
echo ""
print_success "üöÄ Le projet Conciergerie Urbaine V0 est maintenant pr√™t !" 