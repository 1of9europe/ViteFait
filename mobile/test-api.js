const axios = require('axios');

const API_BASE_URL = 'http://localhost:3000/api';

async function testBackendConnection() {
  console.log('üß™ Test de connexion au backend...\n');

  try {
    // Test 1: Health check
    console.log('1Ô∏è‚É£ Test du health check...');
    const healthResponse = await axios.get('http://localhost:3000/health');
    console.log('‚úÖ Health check r√©ussi:', healthResponse.data);
    console.log('');

    // Test 2: Test de l'endpoint d'authentification
    console.log('2Ô∏è‚É£ Test de l\'endpoint d\'authentification...');
    try {
      const authResponse = await axios.post(`${API_BASE_URL}/auth/login`, {
        email: 'test@example.com',
        password: 'password123'
      });
      console.log('‚úÖ Authentification r√©ussie:', authResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è Authentification √©chou√©e (normal si pas d\'utilisateur):', error.response?.data || error.message);
    }
    console.log('');

    // Test 3: Test de l'endpoint des missions
    console.log('3Ô∏è‚É£ Test de l\'endpoint des missions...');
    try {
      const missionsResponse = await axios.get(`${API_BASE_URL}/missions`);
      console.log('‚úÖ R√©cup√©ration des missions r√©ussie:', missionsResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è R√©cup√©ration des missions √©chou√©e (normal si pas authentifi√©):', error.response?.data || error.message);
    }
    console.log('');

    // Test 4: Configuration mobile
    console.log('4Ô∏è‚É£ Test de la configuration mobile...');
    const mobileConfig = {
      API_BASE_URL: 'http://localhost:3000/api',
      TIMEOUT: 10000,
      RETRY_ATTEMPTS: 3
    };
    console.log('‚úÖ Configuration mobile:', mobileConfig);
    console.log('');

    console.log('üéâ Tests termin√©s ! Le backend est accessible depuis le mobile.');

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error.message);
    if (error.code === 'ECONNREFUSED') {
      console.log('üí° Le backend n\'est pas accessible. Assurez-vous qu\'il soit d√©marr√© sur le port 3000.');
    }
  }
}

testBackendConnection(); 